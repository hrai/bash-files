# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys 'C-h'"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys 'C-j'"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys 'C-k'"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys 'C-l'"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# Recording Program Output to a Log
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# Split command remap
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix `
bind-key ` send-prefix

# Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Setting vi mode for tmux
# Press
##   <prefix>[ to enter vi mode
##   Space to start selection
##   Esc  to exit selection & vi mode (copies selected text to tmux clipboard)
##   Switch to another tmux pane
##   <prefix>] to paste the copied content
set-window-option -g mode-keys vi

set -g status-left "#{pane_current_path}"
set -g status-left-length 85

# setw -g window-status-format "#{pane_current_path}"
set -g status-justify centre
# set -g status-left " #S "

# set -g status-interval 60
# set -g status-utf8 on

# nvim term gui colours setting
set-option -sa terminal-overrides ',xterm-256color:RGB'

set -g default-terminal "screen-256color"

# auto window rename
set-window-option -g automatic-rename

# enabling mouse mode
# setw -g mode-mouse-style on
# set -g mouse-select-pane-style on
# set -g mouse-resize-pane-style off
# set -g mouse-select-window-style off

# setw -g window-status-style fg=cyan bg=default,dim
# setw -g window-status-current-style fg=white bg=red,bright

set -g status-style bg=colour2,fg=black,dim

setw -g window-status-style fg=brightblue,bg=colour236,dim
setw -g window-status-current-style fg=brightred,bg=colour236,bright

setw -g mode-style bg=colour238,fg=colour196,bold

set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=yellow

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'


# THEMEPACK
set -goq @themepack-status-left-area-left-format "#P"
set -goq @themepack-status-left-area-right-format "#{pane_current_path}"
# set -goq @themepack-status-left-area-right-format "#P"
# set -goq @themepack-status-left-area-left-format "#{pane_current_path}"

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/default/green'

# CONFIG FOR TMUX-RESURRECT FOR NEOVIM
# for vim
# set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# Press prefix + I (capital i, as in Install) to fetch the plugin.
run -b '~/.tmux/plugins/tpm/tpm'

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
